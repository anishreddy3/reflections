What happens when you initialize a repository? Why do you need to do it?

When we initialize a repository we get a .git folder which makes that folder a 
repository and it contains all the metadata for that respective git repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area clubs all files that are added to it to make them as a single commit
and it can be really helpful and is different from working directory and repository
where it is not possible in them.

How can you use the staging area to make sure you have one commit per logical change?

The staging area is a nice feature to make sure we make commits only for a logic change and acts 
as a nice intermediate between working directory and repository.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are very helful when you decide to try some experimental features on your program but keeping the previous
work saved so that you wouldn't have to loose your progress till that moment.

How do the diagrams help you visualize the branch structure?

The diagrams were really helpful in making me realize the pattern of commit log and the working of branches
in the git workspace.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result of merging two branches is a nice way to combine a specific feature on which we were working
with the master branch so that everything is in a single file.

 
